From 514b166bd0aab39730bf8973671fc8ac2aab85c3 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 14 Dec 2021 17:51:08 +0800
Subject: [PATCH] Fix openssl 3.x compatibility

Skip deprecated-declarations error, still use deprecated functions in
openssl 3.x

Bump OPENSSL_VERSION_NUMBER to less than 0x40000000L which these APIs
are still supported in openssl 3.x

Upstream-Status: Pending

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 CMakeLists.txt           | 4 ++--
 adapters/tlsio_openssl.c | 2 +-
 adapters/x509_openssl.c  | 4 ++--
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f1cf06fe..c8c0f9d5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -182,8 +182,8 @@ elseif(LINUX) #LINUX OR APPLE
         set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DUSE_WOLFSSL")
     endif()
     # Turn off warning that can not be fixed right now
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-variable -Wno-missing-braces -Wno-missing-field-initializers -Wno-format-nonliteral")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unused-variable -Wno-missing-braces -Wno-missing-field-initializers -Wno-format-nonliteral")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-variable -Wno-missing-braces -Wno-missing-field-initializers -Wno-format-nonliteral -Wno-deprecated-declarations")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-unused-variable -Wno-missing-braces -Wno-missing-field-initializers -Wno-format-nonliteral -Wno-deprecated-declarations")
 elseif(APPLE)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wformat-security")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wformat-security")
diff --git a/adapters/tlsio_openssl.c b/adapters/tlsio_openssl.c
index a73c129c..c3efd189 100644
--- a/adapters/tlsio_openssl.c
+++ b/adapters/tlsio_openssl.c
@@ -866,7 +866,7 @@ static int add_certificate_to_store(TLS_IO_INSTANCE* tls_io_instance, const char
         }
         else
         {
-#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x20000000L)
+#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x40000000L)
             const BIO_METHOD* bio_method;
 #else
             BIO_METHOD* bio_method;
diff --git a/adapters/x509_openssl.c b/adapters/x509_openssl.c
index 11be7a03..36302b7b 100644
--- a/adapters/x509_openssl.c
+++ b/adapters/x509_openssl.c
@@ -73,7 +73,7 @@ static int load_certificate_chain(SSL_CTX* ssl_ctx, const char* certificate)
                 // certificates.
 
                 /* Codes_SRS_X509_OPENSSL_07_006: [ If successful x509_openssl_add_ecc_credentials shall to import each certificate in the cert chain. ] */
-#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x20000000L)
+#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x40000000L)
                 SSL_CTX_clear_extra_chain_certs(ssl_ctx);
 #else
                 if (ssl_ctx->extra_certs != NULL)
@@ -264,7 +264,7 @@ int x509_openssl_add_certificates(SSL_CTX* ssl_ctx, const char* certificates)
         else
         {
             /*Codes_SRS_X509_OPENSSL_02_012: [ x509_openssl_add_certificates shall get the memory BIO method function by calling BIO_s_mem. ]*/
-#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x20000000L)
+#if (OPENSSL_VERSION_NUMBER >= 0x10100000L) && (OPENSSL_VERSION_NUMBER < 0x40000000L)
             const BIO_METHOD* bio_method;
 #else
             BIO_METHOD* bio_method;
-- 
2.27.0

